package components

import "blueprint-ui/cmd/web/components/icons"
import "strings"

type OptionsStruct struct {
	ProjectName       string
	SelectedBackend   string
	SelectedDB        string
	SelectGit         string
	SelectFrontend    string
	AdvancedFrontend  []string
	AdvancedOptions   []string
}

func contains(slice []string, value string) bool {
	for _, item := range slice {
		if item == value {
			return true
		}
	}
	return false
}


templ FolderStructure(options OptionsStruct, commandStr string) {
    <div class="prose prose-slate mt-6 max-w-none">
	<p class="mb-1">Use this command to create a new project with the following folder structure. </p>
	<pre class="!mt-2 overflow-x-scroll">
	    <code id="command">
		{ commandStr }
	    </code>
	</pre>
    </div>
    <script>
	let text = document.getElementById('command').innerHTML;
	const copyContent = async () => {
	    try {
		await navigator.clipboard.writeText(text);
		console.log('Content copied to clipboard');
	    } catch (err) {
		console.error('Failed to copy: ', err);
	    }
	}
    </script>
    <div class="bg-white mt-2 shadow sm:rounded-lg">
	<div class="px-4 py-5 sm:p-6">
	    <div class="flex items-center">
		@icons.FolderIcon()
		<p class={ "inline italic", templ.KV("text-gray-500", options.ProjectName == "") }>
		    if options.ProjectName == "" {
			my_project
		    } else {
			{ strings.ReplaceAll(options.ProjectName, " ", "") }
		    }
		</p>
	    </div>
	    <ul class="ml-4 space-y-1">
		if options.SelectGit != "skip" {
		    <li>
			@icons.FolderIcon()
			<p class="inline">.git</p>
		    </li>
		}
		if contains(options.AdvancedOptions, "githubaction") {
		    <li>
			@icons.FolderIcon()
			<p class="inline">.github</p>
			<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
			    <li>
				@icons.FolderIcon()
				<p class="inline">workflows</p>
				<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				    <li>
					@icons.YamlIcon()
					<p class="inline ml-2">go-test.yml</p>
				    </li>
				    <li>
					@icons.YamlIcon()
					<p class="inline ml-2">release.yml</p>
				    </li>
				</ul>
			    </li>
			</ul>
		    </li>
		}
		<li>
		    @icons.FolderIcon()
		    <p class="inline ml-2">cmd</p>
		    <ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
			<li>
			    @icons.FolderIcon()
			    <p class="inline ml-2">api</p>
			    <ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				<li>
				    @icons.GolangIcon()
				    <p class="inline ml-2">main.go</p>
				</li>
			    </ul>
			</li>
			if options.SelectFrontend == "htmx" {
			    <li>
				@icons.FolderIcon()
				<p class="inline ml-2">web</p>
				<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				    if contains(options.AdvancedFrontend, "tailwind") {
					<li>
					    @icons.FolderIcon()
					    <p class="inline ml-2">styles</p>
					    <ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
						<li>
						    @icons.CSSIcon()
						    <p class="inline ml-2">input.css</p>
						</li>
					    </ul>
					</li>
				    }
				    <li>
					@icons.FolderIcon()
					<p class="inline ml-2">assets</p>
					<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
					    if contains(options.AdvancedFrontend, "tailwind") {
						<li>
						    @icons.FolderIcon()
						    <p class="inline ml-2">css</p>
						    <ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
							<li>
							    @icons.CSSIcon()
							    <p class="inline ml-2">output.css</p>
							</li>
						    </ul>
						</li>
					    }
					    <li>
						@icons.FolderIcon()
						<p class="inline ml-2">js</p>
						<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
						    <li>
							@icons.JavaScriptIcon()
							<p class="inline ml-2">htmx.min.js</p>
						    </li>
						</ul>
					    </li>
					</ul>
				    </li>
				    <li>
					@icons.TemplIcon()
					<p class="inline ml-2">base.templ</p>
				    </li>
				    <li>
					@icons.GolangIcon()
					<p class="inline ml-2">base_templ.go</p>
				    </li>
				    <li>
					@icons.GolangIcon()
					<p class="inline ml-2">efs.go</p>
				    </li>
				    <li>
					@icons.GolangIcon()
					<p class="inline ml-2">hello.go</p>
				    </li>
				    <li>
					@icons.TemplIcon()
					<p class="inline ml-2">hello.templ</p>
				    </li>
				    <li>
					@icons.GolangIcon()
					<p class="inline ml-2">hello_templ.go</p>
				    </li>
				</ul>
			    </li>
			}
		    </ul>
		</li>
		if options.SelectFrontend == "react" {
		    <li>
			@icons.FolderIcon()
			<p class="inline ml-2">frontend</p>
			<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
			    <li>
				@icons.FolderIcon()
				<p class="inline ml-2">public</p>
				<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				    <li>
					@icons.SVGIcon()
					<p class="inline ml-2">vite.svg</p>
				    </li>
				</ul>
			    </li>
			    <li>
				@icons.FolderIcon()
				<p class="inline ml-2">src</p>
				<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				    <li>
					@icons.FolderIcon()
					<p class="inline ml-2">assets</p>
					<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
					    <li>
						@icons.SVGIcon()
						<p class="inline ml-2">react.svg</p>
					    </li>
					</ul>
				    </li>
				    if !contains(options.AdvancedFrontend, "tailwind") {
					<li>
					    @icons.CSSIcon()
					    <p class="inline ml-2">App.css</p>
					</li>
				    }
				    <li>
					@icons.TypeScriptIcon()
					<p class="inline ml-2">App.tsx</p>
				    </li>
				    <li>
					@icons.CSSIcon()
					<p class="inline ml-2">index.css</p>
				    </li>
				    <li>
					@icons.TypeScriptIcon()
					<p class="inline ml-2">main.tsx</p>
				    </li>
				    <li>
					@icons.TypeScriptIcon()
					<p class="inline ml-2">vite-env.d.ts</p>
				    </li>
				</ul>
			    </li>
			    <li>
				@icons.JavaScriptIcon()
				<p class="inline ml-2">eslint.config.js</p>
			    </li>
			    <li>
				@icons.HTMLIcon()
				<p class="inline ml-2">index.html</p>
			    </li>
			    <li>
				@icons.JSONIcon()
				<p class="inline ml-2">package.json</p>
			    </li>
			    if contains(options.AdvancedFrontend, "tailwind") {
				<li>
				    @icons.JSONIcon()
				    <p class="inline ml-2">package-lock.json</p>
				</li>
				<li>
				    @icons.JavaScriptIcon()
				    <p class="inline ml-2">postcss.config.js</p>
				</li>
			    }
			    <li>
				@icons.MarkdownIcon()
				<p class="inline ml-2">README.md</p>
			    </li>
			    if contains(options.AdvancedFrontend, "tailwind") {
				<li>
				    @icons.JavaScriptIcon()
				    <p class="inline ml-2">tailwind.config.js</p>
				</li>
			    }
			    <li>
				@icons.JSONIcon()
				<p class="inline ml-2">tsconfig.app.json</p>
			    </li>
			    <li>
				@icons.JSONIcon()
				<p class="inline ml-2">tsconfig.json</p>
			    </li>
			    <li>
				@icons.JSONIcon()
				<p class="inline ml-2">tsconfig.node.json</p>
			    </li>
			    <li>
				@icons.TypeScriptIcon()
				<p class="inline ml-2">vite.config.ts</p>
			    </li>
			</ul>
		    </li>
		}
		<li>
		    @icons.FolderIcon()
		    <p class="inline">internal</p>
		    if options.SelectedDB != "none" {
			<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
			    <li>
				@icons.FolderIcon()
				<p class="inline">database</p>
				<ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				    <li>
					@icons.GolangIcon()
					<p class="inline ml-2">database.go</p>
				    </li>
				    if options.SelectedDB != "sqlite" {
					<li>
					    @icons.GolangIcon()
					    <p class="inline ml-2">database_test.go</p>
					</li>
				    }
				</ul>
			    </li>
			</ul>
		    }
		    <ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
			<li>
			    @icons.FolderIcon()
			    <p class="inline ml-2">server</p>
			    <ul class="ml-4 border-l border-gray-200 pl-2 space-y-1">
				<li>
				    @icons.GolangIcon()
				    <p class="inline ml-2">routes.go</p>
				</li>
				<li>
				    @icons.GolangIcon()
				    <p class="inline ml-2">routes_test.go</p>
				</li>
				<li>
				    @icons.GolangIcon()
				    <p class="inline ml-2">server.go</p>
				</li>
			    </ul>
			</li>
		    </ul>
		</li>
		<li>
		    @icons.TomlIcon()
		    <p class="inline ml-2">air.toml</p>
		</li>
		if contains(options.AdvancedOptions, "docker") || (options.SelectedDB != "none" && options.SelectedDB != "sqlite") {
		    <li>
			@icons.DockerYamlIcon()
			<p class="inline ml-2">docker-compose.yml</p>
		    </li>
		}
		if contains(options.AdvancedOptions, "docker") {
		    <li>
			@icons.DockerfileIcon()
			<p class="inline ml-2">Dockerfile</p>
		    </li>
		}
		if contains(options.AdvancedOptions, "githubaction") {
		    <li>
			@icons.YamlIcon()
			<p class="inline ml-2">.goreleaser.yml</p>
		    </li>
		}
		<li>
		    @icons.MakefileIcon()
		    <p class="inline ml-2">Makefile</p>
		</li>

		<li>
		    @icons.EnvIcon()
		    <p class="inline ml-2">.env</p>
		</li>
		if options.SelectGit != "skip" {
		    <li>
			@icons.GitIcon()
			<p class="inline ml-2">.gitignore</p>
		    </li>
		}
		<li>
		    @icons.MarkdownIcon()
		    <p class="inline ml-2">Readme.md</p>
		</li>
		<li>
		    @icons.GolangIcon()
		    <p class="inline ml-2">go.mod</p>
		</li>
		<li>
		    @icons.GolangIcon()
		    <p class="inline ml-2">go.sum</p>
		</li>
		if options.SelectFrontend == "htmx" {
		<li>
		    @icons.TailwindIcon()
		    <p class="inline ml-2">tailwind.config.js</p>
		</li>
		}
	    </ul>
       </div>
  </div>
}
